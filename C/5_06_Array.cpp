#include <stdio.h>

// * 배열 *
// 지금까지는 한번에 하나의 데이터만 다루는 방법을 다루었습니다.
// 하지만, 실제로 여러개의 데이터를 한번에 다루어야 할 경우가 있습니다.
// 아래는 배열을 사용하는 것과 사용하지 않는 것을 비교하기 위한 예시입니다.
// 컴퓨터는 어떻게 여러개의 변수를 하나의 인자로 전달 할 수 있을까요?
// func02에서는 연속된 변수의 최초 주소 1개만 전달함으로써, 여러개의 변수를 한번에 전달 할 수 있는 것입니다.
// 당연히 주소(포인터)이기 때문에, 연산중에 반영된 내용이 최종 변수에 영향을 미칩니다.
// 배열은 포인터의 일종입니다.

void print(int A[], int size);

int main()
{
	int A[3];	// 배열을 선언하는 방법
	A[0] = 10;	// 배열을 사용(저장)하는 방법
	A[1] = 20;
	A[2] = 30;

	print(A, 3);
	
}

void print(int A[], int size) {
	for (int i = 0; i < size; i++) {
		printf("%d ", A[i]);
	}
	printf("\n");
}

/*
실습과제 1:
	10개짜리 배열을 만듭니다.
	1부터, 10까지 숫자를 저장합니다.
	저장한 숫자를 확인합니다.

실습과제 2:
	문자 배열을 만듭니다.
		char str[10] = {"String"};

	아래 문자열을 한 글자씩 띄어서 출력하세요.
		예) S t r i n g

실습과제 3:
	문자열이 모두 대문자로 출력하세요.
		예)STRING

실습과제 4:
	암호를 만듭니다. 각 글자는 1글자씩 다음 글자를 출력합니다.
	예를들어,
		hello -> ifmmp
		be nice -> cf ojdf

실습과제 5:
	복호화 함수도 만듭니다.

실습과제 6:
	문자(26)+숫자(10)+사이띄기를 섞어 37가지 문자를 치환하는 방법을 개발해 봅니다.
	치환 방법이 모음 유추공격에 약한 이유를 알아봅니다.

*/

void print(int A[], int size)
{
}
