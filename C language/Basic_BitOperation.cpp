#include <stdio.h>

// * 비트연산 *
// 모든 저장공간은 1개 이상의 비트를 가지고 있습니다.
// 모든 비트는 0 또는 1을 가지고 있습니다.
// AND(&), OR(|), XOR(^)연산의 결과에 따라서 비트 연산을 할 수 있습니다.
// 단, 주의할 점은 &&는 논리연산, &는 비트연산이라는 점입니다.
// Truth Table은 다음과 같습니다.
// 
//  AND |  A  &  B		 OR  |  A  |  B		 XOR |  A  |  B		 NOT |  A
// -----------------	-----------------	-----------------	-----------
//  0   |  0  &  0		 0   |  0  |  0		 0   |  0  |  0		 1   |  0
//  0   |  0  &  1		 1   |  0  |  1		 1   |  0  |  1		 0   |  1
//  0   |  1  &  0		 1   |  1  |  0		 1   |  1  |  0
//  1   |  1  &  1		 1   |  1  |  1		 0   |  1  |  1
//
// 주의 할 점은 비교연산에서 NOT은 !를 썼지만, 비트연산에서는 ~를 사용한다는 점입니다.

void main()
{
	int i = 0x0F;
	int j = 0x15;

	printf("i AND j = %02X\n", i & j);
	printf("i OR j  = %02X\n", i | j);
	printf("i XOR j = %02X\n", i ^ j);
	printf("NOT i   = %02X\n", ~i);
	printf("NOT i   = %02X\n", ~i & 0xFF);
}